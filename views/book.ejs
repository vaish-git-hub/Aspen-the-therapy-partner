<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>
        book
    </title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="/img/bg4.png" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=DM+Serif+Display:ital@1&family=Lilita+One&family=Poppins:wght@300;600&family=Rubik:wght@300&display=swap"
        rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="lib/animate/animate.min.css" rel="stylesheet">
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="lib/lightbox/css/lightbox.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="/css/style.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .container5 {
            max-width: 600px;
            /* Adjust the maximum width as needed */
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        h2 {
            text-align: center;
        }

        label {
            display: block;
            margin-bottom: 10px;
        }

        input[type="text"],
        input[type="email"],
        input[type="tel"],
        select,
        input[type="date"],
        input[type="time"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        input[type="submit"] {
            background-color: #ad7644;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }

        input[type="submit"]:hover {
            background-color: #0a1f36;
        }
    </style>
</head>

<body>
    <%- include('layout/header.ejs') %>
    <div class="container5">
        <h2>Book an Appointment</h2>
        <form id="appointmentForm" method="post" action="/book">
            <label for="name">Name:</label>
            <input type="text" name="name" required><br><br>

            <label for="email">Email:</label>
            <input type="email" name="email" required><br><br>

            <label for="phone">Phone:</label>
            <input type="tel" name="phone" required><br><br>

            <label for="doctorType">Type of Doctor:</label>
            <select name="doctorType" id="doctorTypeSelect" required>
                <option value="therapist">Therapist</option>
                <option value="psychiatrist">Psychiatrist</option>
            </select><br><br>

            <label for="doctorId">Doctor:</label>
<select name="doctorId" id="doctorId" required>
    <option value="">Select a doctor</option>
</select><br><br>


            <label for="date">Date:</label>
            <input type="date" name="date" required><br><br>

            <label for="time">Time:</label>
            <input type="time" name="time" required><br><br>

            <input type="submit" value="Book Appointment">
        </form>
    </div>

    <script>
     
document.addEventListener("DOMContentLoaded", async function () {
    // Function to populate the doctor dropdown list
    async function populateDoctorDropdown() {
        try {
            const response = await fetch('/doctors');
            const doctors = await response.json();
            const doctorSelect = document.getElementById("doctorId");

            // Populate doctor dropdown
            doctors.forEach(doctor => {
                const option = document.createElement("option");
                option.value = doctor._id;
                option.textContent = doctor.name;
                doctorSelect.appendChild(option);
            });
        } catch (error) {
            console.error('Error fetching doctors:', error);
            alert('Failed to fetch doctors. Please try again later.');
        }
    }

    // Call populate function on page load
    await populateDoctorDropdown();

    // Handle form submission
    document.getElementById("appointmentForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const form = event.target;
        const dateInput = form.elements.date;
        const phoneInput = form.elements.phone;

        const currentDate = new Date();
        const selectedDate = new Date(dateInput.value);
        const phoneNumber = phoneInput.value;

        // Perform client-side validation
        if (selectedDate < currentDate) {
            alert("The selected date must be today or a future date.");
            return;
        }

        if (phoneNumber.length !== 10) {
            alert("The phone number must be 10 digits long.");
            return;
        }

        // Collect form data
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        try {
            // Submit the form data using a POST request
            const response = await fetch('/book', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            const result = await response.json();

            if (response.ok) {
                alert(result.message);
                // Reset the form on successful submission
                form.reset();
            } else {
                alert(result.error);
            }
        } catch (error) {
            console.error('Error booking appointment:', error);
            alert('An error occurred while booking the appointment.');
        }
    });
});
</script>
</body>